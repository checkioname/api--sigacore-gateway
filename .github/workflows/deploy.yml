name: Deploy Gateway to EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run tests
      run: |
        go mod tidy
        go test ./...

    - name: Build application
      run: |
        go build -o bin/gateway cmd/main.go

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Add EC2 to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      run: |
        # Criar diretório no EC2 se não existir
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
          sudo mkdir -p /opt/sigacore-gateway
          sudo chown ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} /opt/sigacore-gateway
        "
        
        # Enviar arquivos para EC2
        scp -r ./* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/opt/sigacore-gateway/
        
        # Executar deploy no EC2
        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
          cd /opt/sigacore-gateway
          
          # Parar serviço anterior se existir
          sudo pkill -f gateway || true
          
          # Instalar dependências Go se necessário
          if ! command -v go &> /dev/null; then
            wget https://go.dev/dl/go1.21.0.linux-amd64.tar.gz
            sudo tar -C /usr/local -xzf go1.21.0.linux-amd64.tar.gz
            echo 'export PATH=\$PATH:/usr/local/go/bin' >> ~/.bashrc
            source ~/.bashrc
          fi
          
          # Build da aplicação
          /usr/local/go/bin/go mod tidy
          /usr/local/go/bin/go build -o bin/gateway cmd/main.go
          
          # Configurar variáveis de ambiente
          sudo tee /etc/systemd/system/sigacore-gateway.service > /dev/null << 'SYSTEMD_EOF'